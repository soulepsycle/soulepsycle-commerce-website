generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Address {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @db.Timestamptz(6)
  house_number    String
  street          String
  barangay        String
  municipality    String
  province        String
  zip_code        String
  user_id         String            @db.Uuid
  User            User              @relation(fields: [user_id], references: [id], onDelete: Cascade)
  ShippingAddress ShippingAddress[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model BagItem {
  id                      String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at              DateTime           @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?          @db.Timestamptz(6)
  product_variant_size_id String             @db.Uuid
  user_id                 String             @db.Uuid
  quantity                Int                @default(1)
  ProductVariantSize      ProductVariantSize @relation(fields: [product_variant_size_id], references: [id], onDelete: Cascade)
  User                    User               @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Category {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  name       String    @unique
  Product    Product[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Order {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at           DateTime             @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?            @db.Timestamptz(6)
  user_id              String               @db.Uuid
  status               ORDER_STATUS         @default(PENDING)
  total_price          Float                @db.Real
  shipping_address_id  String               @db.Uuid
  payment_method       PAYMENT_METHOD
  proof_payment_images String[]
  ShippingAddress      ShippingAddress      @relation(fields: [shipping_address_id], references: [id], onDelete: Cascade)
  User                 User                 @relation(fields: [user_id], references: [id], onDelete: Cascade)
  OrderItem            OrderItem[]
  OrderStatusHistory   OrderStatusHistory[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model OrderItem {
  id                      String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at              DateTime           @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?          @db.Timestamptz(6)
  order_id                String             @db.Uuid
  product_variant_size_id String             @db.Uuid
  quantity                Int
  unit_price              Float              @db.Real
  Order                   Order              @relation(fields: [order_id], references: [id], onDelete: Cascade)
  ProductVariantSize      ProductVariantSize @relation(fields: [product_variant_size_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model OrderStatusHistory {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  order_id   String    @db.Uuid
  Order      Order     @relation(fields: [order_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model PersonalInformation {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  user_id      String    @db.Uuid
  first_name   String?
  last_name    String
  age          Decimal   @default(0) @db.Decimal
  birth_date   DateTime? @db.Date
  phone_number Decimal   @db.Decimal
  User         User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Product {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @db.Timestamptz(6)
  name                String
  description         String?
  price               Float                 @db.Real
  code                String?
  category_id         String                @db.Uuid
  Category            Category              @relation(fields: [category_id], references: [id], onDelete: Cascade)
  ProductVariantColor ProductVariantColor[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ProductVariantColor {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @db.Timestamptz(6)
  product_id         String               @db.Uuid
  color              String
  images             String[]             @default([])
  Product            Product              @relation(fields: [product_id], references: [id], onDelete: Cascade)
  ProductVariantSize ProductVariantSize[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ProductVariantSize {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?           @db.Timestamptz(6)
  size                PRODUCT_SIZES?
  status              String
  product_color_id    String              @db.Uuid
  stock               Int
  BagItem             BagItem[]
  OrderItem           OrderItem[]
  ProductVariantColor ProductVariantColor @relation(fields: [product_color_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ShippingAddress {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  address_id String    @db.Uuid
  is_default Boolean   @default(false)
  Order      Order[]
  Address    Address   @relation(fields: [address_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @db.Timestamptz(6)
  email               String?
  password            String?
  user_id             String?               @default(dbgenerated("requesting_user_id()"))
  Address             Address[]
  BagItem             BagItem[]
  Order               Order[]
  PersonalInformation PersonalInformation[]
}

enum ORDER_STATUS {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
  APPROVED
}

enum PAYMENT_METHOD {
  GCASH
  MAYA
  BPI
}

enum PRODUCT_SIZES {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
  XXXXL
}

enum PRODUCT_STATUS {
  IN_STOCK
  LOW_STOCK
  OUT_OF_STOCK
  DISCONTINUED
}
