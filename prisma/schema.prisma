generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  username   String    @unique
  email      String    @unique @db.VarChar
  user_id    String    @unique @default(dbgenerated("requesting_user_id()"))
  address    String    @default("")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Product {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @db.Timestamptz(6)
  name                String
  slug                String                @unique
  price               Float                 @db.Real
  sku                 String?               @unique
  category_id         String                @db.Uuid
  description         String?
  Category            Category              @relation(fields: [category_id], references: [id], onDelete: Cascade)
  ProductVariantColor ProductVariantColor[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ProductVariantColor {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @db.Timestamptz(6)
  color              String
  images             String[]
  product_id         String               @db.Uuid
  Product            Product              @relation(fields: [product_id], references: [id], onDelete: Cascade)
  ProductVariantSize ProductVariantSize[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ProductVariantSize {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?           @db.Timestamptz(6)
  size                PRODUCT_SIZES
  stock               Int
  status              PRODUCT_STATUS
  variant_color_id    String              @db.Uuid
  ProductVariantColor ProductVariantColor @relation(fields: [variant_color_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Category {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  name       String    @unique
  slug       String    @unique
  Product    Product[]
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum PRODUCT_SIZES {
  XS
  S
  M
  L
  XL
  XXL
}

enum PRODUCT_STATUS {
  Active
  Inactive
  Out_of_Stock @map("Out of Stock")
  Discontinued
  Pending
  Draft
  Archived
}
